{
  "WebHostServiceConfiguration": {
    // Development,Production
    "Environment": "Development",
    "Name": "Binner Server",
    "IP": "*",
    "PublicUrl": "https://localhost:8090",
    "Port": 8090,
    "ResourceSource": "d6ng6g5o3ih7k.cloudfront.net",
    // caching configuration
    "MaxCacheItems": 1024,
    "CacheSlidingExpirationMinutes": 30,
    "CacheAbsoluteExpirationMinutes": 0,
    // set the maximum length of time the part types can be cached before forcing a refresh
    "MaxPartTypesCacheLifetime": "00:30:00",
    "Licensing": {
      // if you have a paid Binner Cloud subscription, provide your license key to activate pro features
      "LicenseKey": ""
    },
    "Locale": {
      // valid languages: en, br, cs, da, de, es, fi, fr, he, hu, it, ja, ko, nl, no, pl, pt, ro, sv, th, zhs, zht, bg, rm, el, hr, lt, lv, ru, sk, tr, uk
      "Language": "en",
      // valid currencies: USD, CAD, JPY, GBP, EUR, HKD, SGD, TWD, KRW, AUD, NZD, INR, DKK, NOK, SEK, ILS, CNY, PLN, CHF, CZK, HUF, RON, ZAR, MYR, THB, PHP
      "Currency": "USD"
    },
    "Barcode": {
      // true to enable barcode scanning support
      "Enabled": true,
      // enabling Barcode debug mode will print diagnostic information to the browser console
      "IsDebug": false,
      // the maximum amount of time in milliseconds to wait between keypresses.
      "MaxKeystrokeThresholdMs": 300,
      // set the buffer time in milliseconds used to filter out barcode commands. Default: 80
      "BufferTime": 80,
      // set the 2D barcode prefix, usually [)>
      "prefix2D": "[)>",
      // the barcode scanning profile to use
      "Profile": "Default"
    },
    "Integrations": {
      "Swarm": {
        "Enabled": true,
        // Binner Swarm Api keys can be obtained at https://binner.io/swarm
        // This is optional, by using a registered key you can obtain a higher request limit.
        "ApiKey": "",
        // Binner Swarm Api Url
        "ApiUrl": "https://swarm.binner.io",
        "Timeout": "00:00:05"
      },
      "Octopart": {
        "Enabled": false,
        // Octopart/Nexar API Keys can be obtained at https://portal.nexar.com/sign-up
        "ClientId": "",
        "ClientSecret": ""
      },
      "Digikey": {
        "Enabled": false,
        // specifies the Digikey site to default to. Valid values: US, CA, JP, UK, DE, AT, BE, DK, FI, GR, IE, IT, LU, NL, NO, PT, ES, KR, HK, SG, CN, TW, AU, FR, IN, NZ, SE, MX, CH, IL, PL, SK, SI, LV, LT, EE, CZ, HU, BG, MY, ZA, RO, TH, PH
        "Site": "US",
        // Digikey API Keys can be obtained at https://developer.digikey.com/
        "ClientId": "",
        "ClientSecret": "",
        // The oAuth Postback Url - this must match the Callback Url for the App you configured on Digikey's API
        "oAuthPostbackUrl": "https://localhost:8090/Authorization/Authorize",
        // Digikey Api Url using either https://sandbox-api.digikey.com, https://api.digikey.com
        //"ApiUrl": "https://api.digikey.com"
        "ApiUrl": "https://sandbox-api.digikey.com"
      },
      "Mouser": {
        "Enabled": false,
        // Mouser API Keys can be obtained at https://www.mouser.com/api-hub/
        "ApiKeys": {
          "SearchApiKey": "",
          "OrderApiKey": "",
          "CartApiKey": ""
        },
        // Mouser Api Url
        "ApiUrl": "https://api.mouser.com"
      },
      "Arrow": {
        "Enabled": false,
        // Arrow API Keys can be obtained at https://developers.arrow.com/api/index.php/site/page?view=requestAPIKey
        "ApiKey": "",
        "Username": "",
        "ApiUrl": "https://api.arrow.com"
      },
      "Tme": {
        "Enabled": false,
        "Country": "us",
        // TME API Keys can be obtained at https://developers.tme.eu/login
        "ApiKey": "",
        "ApplicationSecret": "",
        "ApiUrl": "https://api.tme.eu/"
      },
      // AliExpress API is not currently supported
      "AliExpress": {
        "Enabled": false,
        "ApiKey": "",
        // The oAuth Postback Url - this must match the Callback Url for the App you configured on AliExpress API
        "oAuthPostbackUrl": "https://localhost:8090/Authorization/Authorize",
        // AliExpress Api Url
        "ApiUrl": "https://api.aliexpress.com"
      }
    },
    "PrinterConfiguration": {
      // Choose the print mode to use for printing labels. Values: Direct, WebBrowser
      "PrintMode": "Direct",
      // DYMO LabelWriter 450, DYMO LabelWriter 450 Twin Turbo
      "PrinterName": "DYMO LabelWriter 450 Twin Turbo",
      // Auto or Left, Right for DYMO LabelWriter 450 Twin Turbo
      "PartLabelSource": "Right",
      // Label name, such as 30346 or 30277)
      "PartLabelName": "30346",
      "PartLabelTemplate": {
        "Line1": {
          "label": 1,
          "content": "{partNumber}",
          "fontName": "Segoe UI",
          "fontSize": 16,
          "autoSize": true,
          "upperCase": true
        },
        "Line2": {
          "label": 1,
          "content": "{description}",
          "fontName": "Roboto Mono",
          "fontSize": 6
        },
        // description line 2 will be automatically wrapped from line 1
        "Line3": {
          "label": 1,
          "content": "{description}",
          "fontName": "Roboto Mono",
          "fontSize": 6
        },
        "Line4": {
          "label": 1,
          "content": "{partNumber}",
          "barcode": true
        },
        "Identifier": {
          "label": 1,
          "content": "{binNumber}",
          "fontName": "Source Code Pro",
          "fontSize": 10,
          "color": "#ee0000",
          "rotate": 90,
          "position": "left",
          "upperCase": true,
          "margin": {
            "top": 25
          }
        },
        "Identifier2": {
          "label": 1,
          "content": "{binNumber2}",
          "fontName": "Source Code Pro",
          "fontSize": 10,
          "color": "#ee0000",
          "rotate": 90,
          "position": "right",
          "upperCase": true,
          "margin": {
            "top": 25,
            "left": 20
          }
        }
      },
      "LabelDefinitions": [
        {
          "MediaSize": {
            "ModelName": "30277",
            "Name": "File Folder (2 up)",
            "DriverName": "w82h248",
            "ExtraData": "",
            "Width": 82,
            "Height": 248
          },
          "TopMargin": -20,
          "LeftMargin": 0,
          "LabelCount": 2,
          "TotalLines": 2
        },
        {
          "MediaSize": {
            "ModelName": "30346",
            "Name": "1/2 in x 1-7/8 in",
            "DriverName": "w36h136",
            "ExtraData": "",
            "Width": 36,
            "Height": 136
          },
          "TopMargin": -20,
          "LeftMargin": 0,
          "LabelCount": 1,
          "TotalLines": 2
        },
        {
          "MediaSize": {
            "ModelName": "30252",
            "Name": "Address",
            "DriverName": "w79h252",
            "ExtraData": "",
            "Width": 79,
            "Height": 252
          },
          "TopMargin": -20,
          "LeftMargin": 0,
          "LabelCount": 1,
          "TotalLines": 4
        },
        {
          "MediaSize": {
            "ModelName": "30327",
            "Name": "File Folder",
            "DriverName": "w57h248",
            "ExtraData": "",
            "Width": 57,
            "Height": 286
          },
          "TopMargin": -20,
          "LeftMargin": 0,
          "LabelCount": 1,
          "TotalLines": 4
        }
      ]
    },
    "Authentication": {
      // length of jwt token
      "TokenLength": 64,
      // the jwt secret key will be generated automatically if empty
      "JwtSecretKey": "",
      // short-lived access token expiry
      "JwtAccessTokenExpiryTime": "00:15:00",
      // long-lived refresh token expiry
      "JwtRefreshTokenExpiryTime": "03:00:00:00",
      // 128, 256, 512
      "EncryptionBits": 256,
      // clockskew=0 seconds, jwt should expire at exactly the right time
      "ClockSkew": "00:00:00",
      "JwtIssuer": "https://localhost:8090",
      "JwtAudience": "https://localhost:8090",
      "ValidateIssuerSigningKey": true,
      "ValidateIssuer": true,
      "ValidateAudience": true,
      "ValidateLifetime": true,
      "RequireExpirationTime": true
    }
  },
  "StorageProviderConfiguration": {
    // Provider options: Binner, SqlServer, Postgresql, MySql, Sqlite
    "Provider": "Binner",
    "ProviderConfiguration": {
      "Filename": "C:\\Binner\\binner.db",
      "Host": "",
      "Port": "",
      "Database": "",
      "Username": "",
      "Password": "",
      "AdditionalParameters": "",
      // alternatively, a ConnectionString can be provided in place of the above settings
      //"ConnectionString": "Server=localhost;Database=Binner;Trusted_Connection=True;TrustServerCertificate=True;Integrated Security=True;"
    },
    // the path to store user uploaded files to
    "UserUploadedFilesPath": "C:\\Binner\\UserFiles"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Trace",
      "Microsoft": "Error"
    }
  }
}
