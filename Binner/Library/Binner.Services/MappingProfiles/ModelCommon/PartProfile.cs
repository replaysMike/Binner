using AutoMapper;
using Binner.Model;
using Binner.Model.Responses;
using DataModel = Binner.Data.Model;

namespace Binner.Services.MappingProfiles.ModelCommon
{
    public class PartProfile : Profile
    {
        public PartProfile()
        {
            CreateMap<DataModel.Part, PartResponse>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => (decimal)x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartType, options => options.Ignore())
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))
                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.MapFrom(x => x.MetadataLastUpdatedUtc))
                .ForMember(x => x.LastSwarmSyncUtc, options => options.MapFrom(x => x.LastSwarmSyncUtc))
                .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.PartParametrics))
                .ForMember(x => x.Models, options => options.MapFrom(x => x.PartModels))
                .ForMember(x => x.MountingType, options => options.MapFrom(x => ((MountingType)x.MountingTypeId).ToString()))

                .ForMember(x => x.CustomFields, options => options.Ignore()) // mapped manually
                .AfterMap<PartTypeMappingAction<DataModel.Part, PartResponse>>()
                ;

            CreateMap<PartResponse, DataModel.Part>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => (double)x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords))
                .ForMember(x => x.KeywordsList, options => options.MapFrom(x => x.Keywords != null ? x.Keywords.Split(" ", System.StringSplitOptions.RemoveEmptyEntries).ToList() : new List<string>()))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))
                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.MapFrom(x => x.MetadataLastUpdatedUtc))
                .ForMember(x => x.LastSwarmSyncUtc, options => options.MapFrom(x => x.LastSwarmSyncUtc))

                .ForMember(x => x.DateCreatedUtc, options => options.Ignore())
                .ForMember(x => x.KeywordsList, options => options.Ignore())
                .ForMember(x => x.PartType, options => options.Ignore())
                .ForMember(x => x.Project, options => options.Ignore())
                .ForMember(x => x.ProjectPartAssignments, options => options.Ignore())
                .ForMember(x => x.StoredFiles, options => options.Ignore())
                .ForMember(x => x.UserId, options => options.Ignore())
                .ForMember(x => x.PartSuppliers, options => options.Ignore())
                .ForMember(x => x.OrganizationId, options => options.Ignore())
                .ForMember(x => x.PartScanHistories, options => options.Ignore())
                .ForMember(x => x.PartParametrics, options => options.Ignore())
                .ForMember(x => x.PartModels, options => options.Ignore())
                .ForMember(x => x.SwarmPartNumberManufacturerId, options => options.Ignore())
#if INITIALCREATE
                .ForMember(x => x.DateModifiedUtc, options => options.Ignore())
                .ForMember(x => x.User, options => options.Ignore())
#endif
                ;

            CreateMap<DataModel.Part, Part>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? x.Keywords.Split(" ", System.StringSplitOptions.RemoveEmptyEntries).ToList() : new List<string>()))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.DateCreatedUtc, options => options.MapFrom(x => x.DateCreatedUtc))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))
                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.MapFrom(x => x.MetadataLastUpdatedUtc))
                .ForMember(x => x.LastSwarmSyncUtc, options => options.MapFrom(x => x.LastSwarmSyncUtc))
                .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.PartParametrics))
                .ForMember(x => x.Models, options => options.MapFrom(x => x.PartModels))

                .ForMember(x => x.CustomFields, options => options.Ignore()) // mapped manually
                .ForMember(x => x.Packaging, options => options.Ignore())
                ;

            CreateMap<Part, DataModel.Part>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? string.Join(",", x.Keywords) : string.Empty))
                .ForMember(x => x.KeywordsList, options => options.MapFrom(x => x.Keywords))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.DateCreatedUtc, options => options.MapFrom(x => x.DateCreatedUtc))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))
                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.MapFrom(x => x.MetadataLastUpdatedUtc))
                .ForMember(x => x.LastSwarmSyncUtc, options => options.MapFrom(x => x.LastSwarmSyncUtc))


                .ForMember(x => x.PartSuppliers, options => options.Ignore())
                .ForMember(x => x.PartType, options => options.Ignore())
                .ForMember(x => x.Project, options => options.Ignore())
                .ForMember(x => x.ProjectPartAssignments, options => options.Ignore())
                .ForMember(x => x.StoredFiles, options => options.Ignore())
                .ForMember(x => x.UserId, options => options.Ignore())
                .ForMember(x => x.OrganizationId, options => options.Ignore())
                .ForMember(x => x.PartScanHistories, options => options.Ignore())
                .ForMember(x => x.PartParametrics, options => options.Ignore())
                .ForMember(x => x.PartModels, options => options.Ignore())
#if INITIALCREATE
                .ForMember(x => x.User, options => options.Ignore())
                .ForMember(x => x.DateModifiedUtc, options => options.Ignore())
#endif
                ;

            CreateMap<Binner.Model.Requests.CreatePartRequest, Part>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? x.Keywords.Split(" ", System.StringSplitOptions.RemoveEmptyEntries).ToList() : new List<string>()))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.Models, options => options.MapFrom(x => x.Models))
                .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.Parametrics))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))

                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.Ignore())
                .ForMember(x => x.LastSwarmSyncUtc, options => options.Ignore())
                .ForMember(x => x.DateCreatedUtc, options => options.Ignore())
                .ForMember(x => x.PartId, options => options.Ignore())
                .ForMember(x => x.UserId, options => options.Ignore())
                .ForMember(x => x.SwarmPartNumberManufacturerId, options => options.Ignore())
                .ForMember(x => x.Packaging, options => options.Ignore())
                ;

            CreateMap<Binner.Model.Requests.UpdatePartRequest, Part>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? x.Keywords.Split(" ", System.StringSplitOptions.RemoveEmptyEntries).ToList() : new List<string>()))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
                .ForMember(x => x.Models, options => options.MapFrom(x => x.Models))
                .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.Parametrics))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))

                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.Ignore())
                .ForMember(x => x.LastSwarmSyncUtc, options => options.Ignore())
                .ForMember(x => x.DateCreatedUtc, options => options.Ignore())
                .ForMember(x => x.UserId, options => options.Ignore())
                .ForMember(x => x.SwarmPartNumberManufacturerId, options => options.Ignore())
                .ForMember(x => x.Packaging, options => options.Ignore())
                ;

            CreateMap<Binner.Model.Requests.BulkPart, Part>()
                .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
                .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
                .ForMember(x => x.Cost, options => options.MapFrom(x => x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? x.Keywords.Split(" ", System.StringSplitOptions.RemoveEmptyEntries).ToList() : new List<string>()))
                .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
                .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
                .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
                .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
                .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
                .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
                .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
                .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
                .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
                .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
                .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
                .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
                .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
                .ForMember(x => x.Models, options => options.MapFrom(x => x.Models))
                .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.Parametrics))
                .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
                .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))

                .ForMember(x => x.MetadataLastUpdatedUtc, options => options.Ignore())
                .ForMember(x => x.LastSwarmSyncUtc, options => options.Ignore())
                .ForMember(x => x.DateCreatedUtc, options => options.Ignore())
                .ForMember(x => x.PartId, options => options.Ignore())
                .ForMember(x => x.UserId, options => options.Ignore())
                .ForMember(x => x.SwarmPartNumberManufacturerId, options => options.Ignore())
                .ForMember(x => x.Packaging, options => options.Ignore())
                ;

            CreateMap<Part, Binner.Model.CommonPart>()
                .ForMember(x => x.Cost, options => options.MapFrom(x => x.Cost))
                .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
                .ForMember(x => x.DatasheetUrls, options => options.MapFrom(x => new List<string>() { x.DatasheetUrl }))
                .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
                .ForMember(x => x.SupplierPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
                .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
                .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords))
                .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
                .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
                .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
                .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
                .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
                .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
                .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
                .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
                .ForMember(x => x.Supplier, options => options.MapFrom(x => x.DigiKeyPartNumber != null ? "DigiKey" : string.Empty))
                .ForMember(x => x.BasePartNumber, options => options.MapFrom(x => x.BaseProductNumber))
                .ForMember(x => x.FactoryLeadTime, options => options.MapFrom(x => x.LeadTime))
                .ForMember(x => x.Status, options => options.MapFrom(x => x.ProductStatus))
                .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
                .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
                .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
                .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
                .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
                .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
                .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.Parametrics))
                .ForMember(x => x.Models, options => options.MapFrom(x => x.Models))
                .ForMember(x => x.AdditionalPartNumbers, options => options.MapFrom(x => x.OtherNames != null ? x.OtherNames.Split(" ", System.StringSplitOptions.RemoveEmptyEntries).ToList() : new List<string>()))
                .ForMember(x => x.SwarmPartNumberManufacturerId, options => options.MapFrom(x => x.SwarmPartNumberManufacturerId))
                .ForMember(x => x.Packaging, options => options.MapFrom(x => x.Packaging))

                .ForMember(x => x.Categories, options => options.Ignore())
                .ForMember(x => x.FactoryStockAvailable, options => options.Ignore())
                .ForMember(x => x.MinimumOrderQuantity, options => options.Ignore())
                .ForMember(x => x.PartSupplierId, options => options.Ignore())
                .ForMember(x => x.PartType, options => options.Ignore())
                .ForMember(x => x.QuantityAvailable, options => options.Ignore())
                .ForMember(x => x.Rank, options => options.Ignore())
                .ForMember(x => x.Reference, options => options.Ignore())
                .ForMember(x => x.SwarmPartNumberManufacturerId, options => options.Ignore())
                .ForMember(x => x.TotalCost, options => options.Ignore())
                .ForMember(x => x.Key, options => options.Ignore())
                .AfterMap<PartTypeMappingAction<Part, Binner.Model.CommonPart>>()
                ;

            CreateMap<Part, PartResponse>()
               .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
               .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
               .ForMember(x => x.Cost, options => options.MapFrom(x => (double)x.Cost))
               .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
               .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
               .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
               .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
               .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
               .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? string.Join(",", x.Keywords) : string.Empty))
               .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
               .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
               .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
               .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
               .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
               .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
               .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
               .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
               .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
               .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
               .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
               .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
               .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
               .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
               .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
               .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
               .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
               .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
               .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
               .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
               .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
               .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
               .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
               .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
               .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
               .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
               .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
               .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
               .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
               .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
               .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
               .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
               .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
               .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
               .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
               .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))
               .ForMember(x => x.Models, options => options.MapFrom(x => x.Models))
               .ForMember(x => x.Parametrics, options => options.MapFrom(x => x.Parametrics))
               .ForMember(x => x.MetadataLastUpdatedUtc, options => options.MapFrom(x => x.MetadataLastUpdatedUtc))
               .ForMember(x => x.LastSwarmSyncUtc, options => options.MapFrom(x => x.LastSwarmSyncUtc))
               .ForMember(x => x.MountingType, options => options.MapFrom(x => ((MountingType)x.MountingTypeId).ToString()))

               .ForMember(x => x.PartType, options => options.Ignore())
               .AfterMap<PartTypeMappingAction<Part, PartResponse>>()
               ;

            CreateMap<Part, PartStoredFilesResponse>()
               .ForMember(x => x.BinNumber, options => options.MapFrom(x => x.BinNumber))
               .ForMember(x => x.BinNumber2, options => options.MapFrom(x => x.BinNumber2))
               .ForMember(x => x.Cost, options => options.MapFrom(x => (double)x.Cost))
               .ForMember(x => x.Currency, options => options.MapFrom(x => x.Currency))
               .ForMember(x => x.DatasheetUrl, options => options.MapFrom(x => x.DatasheetUrl))
               .ForMember(x => x.Description, options => options.MapFrom(x => x.Description))
               .ForMember(x => x.DigiKeyPartNumber, options => options.MapFrom(x => x.DigiKeyPartNumber))
               .ForMember(x => x.ImageUrl, options => options.MapFrom(x => x.ImageUrl))
               .ForMember(x => x.Keywords, options => options.MapFrom(x => x.Keywords != null ? string.Join(",", x.Keywords) : string.Empty))
               .ForMember(x => x.Location, options => options.MapFrom(x => x.Location))
               .ForMember(x => x.LowestCostSupplier, options => options.MapFrom(x => x.LowestCostSupplier))
               .ForMember(x => x.LowestCostSupplierUrl, options => options.MapFrom(x => x.LowestCostSupplierUrl))
               .ForMember(x => x.LowStockThreshold, options => options.MapFrom(x => x.LowStockThreshold))
               .ForMember(x => x.Manufacturer, options => options.MapFrom(x => x.Manufacturer))
               .ForMember(x => x.ManufacturerPartNumber, options => options.MapFrom(x => x.ManufacturerPartNumber))
               .ForMember(x => x.MountingTypeId, options => options.MapFrom(x => x.MountingTypeId))
               .ForMember(x => x.MouserPartNumber, options => options.MapFrom(x => x.MouserPartNumber))
               .ForMember(x => x.ArrowPartNumber, options => options.MapFrom(x => x.ArrowPartNumber))
               .ForMember(x => x.TmePartNumber, options => options.MapFrom(x => x.TmePartNumber))
               .ForMember(x => x.Element14PartNumber, options => options.MapFrom(x => x.Element14PartNumber))
               .ForMember(x => x.PackageType, options => options.MapFrom(x => x.PackageType))
               .ForMember(x => x.PartId, options => options.MapFrom(x => x.PartId))
               .ForMember(x => x.PartNumber, options => options.MapFrom(x => x.PartNumber))
               .ForMember(x => x.PartTypeId, options => options.MapFrom(x => x.PartTypeId))
               .ForMember(x => x.ProductUrl, options => options.MapFrom(x => x.ProductUrl))
               .ForMember(x => x.ProjectId, options => options.MapFrom(x => x.ProjectId))
               .ForMember(x => x.Quantity, options => options.MapFrom(x => x.Quantity))
               .ForMember(x => x.SymbolName, options => options.MapFrom(x => x.SymbolName))
               .ForMember(x => x.FootprintName, options => options.MapFrom(x => x.FootprintName))
               .ForMember(x => x.ExtensionValue1, options => options.MapFrom(x => x.ExtensionValue1))
               .ForMember(x => x.ExtensionValue2, options => options.MapFrom(x => x.ExtensionValue2))
               .ForMember(x => x.Value, options => options.MapFrom(x => x.Value))
               .ForMember(x => x.ShortId, options => options.MapFrom(x => x.ShortId))
               .ForMember(x => x.LeadTime, options => options.MapFrom(x => x.LeadTime))
               .ForMember(x => x.ProductStatus, options => options.MapFrom(x => x.ProductStatus))
               .ForMember(x => x.BaseProductNumber, options => options.MapFrom(x => x.BaseProductNumber))
               .ForMember(x => x.Series, options => options.MapFrom(x => x.Series))
               .ForMember(x => x.RohsStatus, options => options.MapFrom(x => x.RohsStatus))
               .ForMember(x => x.ReachStatus, options => options.MapFrom(x => x.ReachStatus))
               .ForMember(x => x.MoistureSensitivityLevel, options => options.MapFrom(x => x.MoistureSensitivityLevel))
               .ForMember(x => x.ExportControlClassNumber, options => options.MapFrom(x => x.ExportControlClassNumber))
               .ForMember(x => x.HtsusCode, options => options.MapFrom(x => x.HtsusCode))
               .ForMember(x => x.OtherNames, options => options.MapFrom(x => x.OtherNames))
               .ForMember(x => x.DataSource, options => options.MapFrom(x => x.DataSource))
               .ForMember(x => x.DataSourceId, options => options.MapFrom(x => x.DataSourceId))
               .ForMember(x => x.MetadataLastUpdatedUtc, options => options.MapFrom(x => x.MetadataLastUpdatedUtc))
               .ForMember(x => x.LastSwarmSyncUtc, options => options.MapFrom(x => x.LastSwarmSyncUtc))
               .ForMember(x => x.MountingType, options => options.MapFrom(x => ((MountingType)x.MountingTypeId).ToString()))

               .ForMember(x => x.PartType, options => options.Ignore())
               .ForMember(x => x.StoredFiles, options => options.Ignore())
               .AfterMap<PartTypeMappingAction<Part, PartResponse>>()
               ;
        }
    }
}
